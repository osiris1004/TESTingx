
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocLOWERHIGHEREQUALleftPLUSMINUSleftTIMESDIVIDErightUMINUSAND COLON DIVIDE EQUAL EQUALS HIGHER IF LOWER LPAREN MINUS NAME NUMBER OR PLUS PRINT RPAREN THEN TIMES start : linstlinst : linst inst\n            | inst inst : NAME EQUAL expression COLONinst : PRINT LPAREN expression RPAREN COLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression EQUALS expression\n                  | expression LOWER expression\n                  | expression HIGHER expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,6,7,8,11,12,15,16,17,18,19,20,21,22,23,24,38,],[4,4,-3,-2,9,9,9,9,-4,9,9,9,9,9,9,9,9,9,-5,]),'PRINT':([0,2,3,6,15,38,],[5,5,-3,-2,-4,-5,]),'$end':([1,2,3,6,15,38,],[0,-1,-3,-2,-4,-5,]),'EQUAL':([4,],[7,]),'LPAREN':([5,7,8,11,12,16,17,18,19,20,21,22,23,24,],[8,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MINUS':([7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,],[11,11,-18,17,11,11,-17,17,11,11,11,11,11,11,11,11,11,-15,17,-6,-7,-8,17,17,17,17,17,-14,-16,]),'NUMBER':([7,8,11,12,16,17,18,19,20,21,22,23,24,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'COLON':([9,10,13,25,27,28,29,30,31,32,33,34,35,36,37,],[-18,15,-17,-15,38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,]),'PLUS':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,16,-17,16,-15,16,-6,-7,-8,16,16,16,16,16,-14,-16,]),'TIMES':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,18,-17,18,-15,18,18,18,-8,18,18,18,18,18,-14,-16,]),'OR':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,19,-17,19,-15,19,-6,-7,-8,-9,-10,19,-12,-13,-14,-16,]),'AND':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,20,-17,20,-15,20,-6,-7,-8,20,-10,20,-12,-13,-14,-16,]),'EQUALS':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,21,-17,21,-15,21,-6,-7,-8,-9,-10,21,-12,-13,-14,-16,]),'LOWER':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,22,-17,22,-15,22,-6,-7,-8,22,22,22,None,None,-14,-16,]),'HIGHER':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,23,-17,23,-15,23,-6,-7,-8,23,23,23,None,None,-14,-16,]),'DIVIDE':([9,10,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,24,-17,24,-15,24,24,24,-8,24,24,24,24,24,-14,-16,]),'RPAREN':([9,13,14,25,26,28,29,30,31,32,33,34,35,36,37,],[-18,-17,27,-15,37,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'linst':([0,],[2,]),'inst':([0,2,],[3,6,]),'expression':([7,8,11,12,16,17,18,19,20,21,22,23,24,],[10,14,25,26,28,29,30,31,32,33,34,35,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> linst','start',1,'p_start','calcBase.py',87),
  ('linst -> linst inst','linst',2,'p_line','calcBase.py',96),
  ('linst -> inst','linst',1,'p_line','calcBase.py',97),
  ('inst -> NAME EQUAL expression COLON','inst',4,'p_statement_assign','calcBase.py',105),
  ('inst -> PRINT LPAREN expression RPAREN COLON','inst',5,'p_statement_print','calcBase.py',110),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calcBase.py',121),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calcBase.py',122),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calcBase.py',123),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','calcBase.py',124),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','calcBase.py',125),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','calcBase.py',126),
  ('expression -> expression LOWER expression','expression',3,'p_expression_binop','calcBase.py',127),
  ('expression -> expression HIGHER expression','expression',3,'p_expression_binop','calcBase.py',128),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calcBase.py',129),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calcBase.py',134),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',139),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',144),
  ('expression -> NAME','expression',1,'p_expression_name','calcBase.py',150),
]
